import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';

// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
class S implements WidgetsLocalizations {
  const S();

  static const GeneratedLocalizationsDelegate delegate =
    GeneratedLocalizationsDelegate();

  static S of(BuildContext context) => Localizations.of<S>(context, S);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  String get activity_202020_msg => "Please take a break to look into the distance for 20 seconds at something 20 yards(18 meters) away";
  String get activity_computer => "Computer";
  String get activity_customise => "Customise";
  String get activity_empty_custom => "Input your activity.";
  String get activity_exit_warning => "Do you want to end this activity?";
  String get activity_front_computer => "In front of computer";
  String get activity_hike => "Hike";
  String get activity_indoor => "Indoor";
  String get activity_light_brightness => "Brightness";
  String get activity_light_condition => "Light condition";
  String get activity_light_des => "Warning when brightness is not good enough for eye activities.";
  String get activity_light_time => "Time";
  String get activity_light_warning => "Find more light! Don\\'t strain your eyes!";
  String get activity_no_data => "No data today";
  String get activity_others => "Others";
  String get activity_outdoor => "Outdoor";
  String get activity_phone => "Phone";
  String get activity_reading => "Reading";
  String get activity_short_tv => "TV";
  String get activity_sports => "Sports";
  String get activity_swim => "Swim";
  String get activity_target => "Target";
  String get activity_title => "Activity";
  String get activity_total => "Total";
  String get activity_tv => "Watching TV";
  String get activity_using_phone => "Using mobile phone";
  String get ax_warning => "AX value must be less than 180";
  String get cancel => "CANCEL";
  String get end => "END";
  String get eye_activity_time => "Eye Activity Time";
  String get eye_exercise => "Eye exercise";
  String get high_des_diagnosis => "    You have high myopia (short-sightedness) in one or both eyes, and need visual correction in the form of eyewear, or contact lenses.\n\n    You are at relatively high risk of myopia-related eye complications. Have your eye health regularly tested (every 2 years) as eyesight and eye health can deteriorate without you noticing and also be affected by other medical conditions before they are diagnosed e.g. diabetes, or more regularly if advised by a healthcare professional.\n\n    Conditions to be aware of:\n\t\t\t\tPosterior Vitreous Detachment\n\t\t\t\tRetinal Detachment\n\t\t\t\tGlaucoma\n\t\t\t\tCataracts\n\n    Go see an eye care professional immediately if you experience any unusual, persistent visual disturbances e.g. floating stars, curtain being ‘drawn across’ visual field etc.";
  String get high_des_references => "    ABDEL-AAL, E.-S., AKHTAR, H., ZAHEER, K. & ALI, R. 2013. Dietary sources of lutein and zeaxanthin carotenoids and their role in eye health. Nutrients, 5, 1169-1185.\n\n    BLEHM, C., VISHNU, S., KHATTAK, A., MITRA, S. & YEE, R. W. 2005. Computer Vision Syndrome: A Review. Survey of Ophthalmology, 50, 253-262.\n\n    RNIB 2018. Myopia and pathological myopia.\n\n    ROBERTS, J. E. 2011. Ultraviolet radiation as a risk factor for cataract and macular degeneration. Eye & contact lens, 37, 246-249.";
  String get high_des_tips => "    Take regular breaks when using the computer or reading: remember the 20-20-20 rule. Look into the distance for 20 seconds at something 20 yards away (~18 meters) every 20 minutes.\n\n    Eat healthily! A balanced diet is good for eye health as it is for general health! Fruit, vegetables and oily fish are a great start.\n\n    Shield your eyes from excessively strong sun – a source of UVA and UVB radiation – with sunglasses. UVA/UVB light is risk factor for developing cataracts.";
  String get home_activity_none => "nota activity";
  String get home_hide => "HIDE";
  String get home_indoor_time => "Indoor activity time";
  String get home_outdoor_time => "Outdoor activity time";
  String get home_show_more => "SHOW MORE";
  String get home_title => "Home";
  String get left => "LEFT";
  String get mild_des_diagnosis => "    You have mild myopia (short-sightedness) in one or both eyes, and would benefit from visual correction in the form of eyewear, or contact lenses.\n\n    The good news is you are at low risk of myopia-related eye complications, but remember to have your eyes regularly tested (every 2 years) as eyesight can deteriorate without you noticing and also be affected by other medical conditions before they are diagnosed e.g. diabetes.\n\n    Go see an eye care professional immediately if you experience any unusual, persistent visual disturbances e.g. floating stars, curtain being ‘drawn across’ visual field etc.";
  String get mild_des_references => "    ABDEL-AAL, E.-S., AKHTAR, H., ZAHEER, K. & ALI, R. 2013. Dietary sources of lutein and zeaxanthin carotenoids and their role in eye health. Nutrients, 5, 1169-1185.\n\n    BLEHM, C., VISHNU, S., KHATTAK, A., MITRA, S. & YEE, R. W. 2005. Computer Vision Syndrome: A Review. Survey of Ophthalmology, 50, 253-262.\n\n    ROBERTS, J. E. 2011. Ultraviolet radiation as a risk factor for cataract and macular degeneration. Eye & contact lens, 37, 246-249.";
  String get mild_des_tips => "    Take regular breaks when using the computer or reading: remember the 20-20-20 rule. Look into the distance for 20 seconds at something 20 yards away (~18 meters) every 20 minutes.\n\n    Eat healthily! A balanced diet is good for eye health as it is for general health!  Fruit, vegetables and oily fish are a great start.\n\n    Shield your eyes from excessively strong sun – a source of UVA and UVB radiation – with sunglasses. UVA/UVB light is risk factor for developing cataracts.";
  String get moderate_des_diagnosis => "    You have moderate myopia (short-sightedness) in one or both eyes, and need visual correction in the form of eyewear, or contact lenses.\n\n    You are at greater risk of myopia-related eye complications. Remember to have your eyes regularly tested (every 2 years) as eyesight and eye health can deteriorate without you noticing and also be affected by other medical conditions before they are diagnosed e.g. diabetes, or more regularly if advised by a healthcare professional.\n\n    Go see an eye care professional immediately if you experience any unusual, persistent visual disturbances e.g. floating shapes/dots, curtain being ‘drawn across’ your visual field etc.";
  String get moderate_des_references => "    ABDEL-AAL, E.-S., AKHTAR, H., ZAHEER, K. & ALI, R. 2013. Dietary sources of lutein and zeaxanthin carotenoids and their role in eye health. Nutrients, 5, 1169-1185.\n\n    BLEHM, C., VISHNU, S., KHATTAK, A., MITRA, S. & YEE, R. W. 2005. Computer Vision Syndrome: A Review. Survey of Ophthalmology, 50, 253-262.\n\n    ROBERTS, J. E. 2011. Ultraviolet radiation as a risk factor for cataract and macular degeneration. Eye & contact lens, 37, 246-249.";
  String get moderate_des_tips => "    Take regular breaks when using the computer or reading: remember the 20-20-20 rule. Look into the distance for 20 seconds at something 20 yards away (~18 meters) every 20 minutes.\n\n    Eat healthily! A balanced diet is good for eye health as it is for general health! Fruit, vegetables and oily fish are a great start.\n\n    Shield your eyes from excessively strong sun – a source of UVA and UVB radiation – with sunglasses. UVA/UVB light is risk factor for developing cataracts.";
  String get normal_des_diagnosis => "    Congratulations, you have good long distance vision!\n\n    But, remember to have your eyes regularly tested (every 2 years) as eyesight and eye health can deteriorate without you noticing and can also be affected by other medical conditions before they are diagnosed e.g. diabetes.";
  String get normal_des_references => "    ABDEL-AAL, E.-S., AKHTAR, H., ZAHEER, K. & ALI, R. 2013. Dietary sources of lutein and zeaxanthin carotenoids and their role in eye health. Nutrients, 5, 1169-1185.\n\n    BLEHM, C., VISHNU, S., KHATTAK, A., MITRA, S. & YEE, R. W. 2005. Computer Vision Syndrome: A Review. Survey of Ophthalmology, 50, 253-262.\n\n    ROBERTS, J. E. 2011. Ultraviolet radiation as a risk factor for cataract and macular degeneration. Eye & contact lens, 37, 246-249.";
  String get normal_des_tips => "    Take regular breaks when using the computer or reading: remember the 20-20-20 rule. Look into the distance for 20 seconds at something 20 yards away (~18 meters) every 20 minutes.\n\n    Eat healthily! A balanced diet is good for eye health as it is for general health! Fruit, vegetables and oily fish are a great start.\n\n    Shield your eyes from excessively strong sun – a source of UVA and UVB radiation – with sunglasses. UVA/UVB light is risk factor for developing cataracts.";
  String get ok => "OK";
  String get pd_warning => "PD value must be less than 100";
  String get result_des_diagnosis => "DIAGNOSIS";
  String get result_des_ref => "REFERENCES";
  String get result_des_tips => "TIPS";
  String get result_high => "High Myopia";
  String get result_mild => "Mild Myopia";
  String get result_moderate => "Moderate Myopia";
  String get result_normal => "Normal";
  String get right => "RIGHT";
  String get s_continue => "CONTINUE";
  String get settings_title => "Settings";
  String get sph_warning => "You are entering a positive value, are you sure this is correct?";
  String get start => "START";
  String get start_new_activity => "Start a new activity";
  String get stop => "STOP";
  String get time_h => "h";
  String get time_min => "min";
  String get time_mins => "mins";
  String get type_title => "Type";
  String get vision_add => "ADD";
  String get vision_additional => "Additional";
  String get vision_ax => "Axis(AX)";
  String get vision_cyl => "Cylinder(CYL)";
  String get vision_get_info => "How can I get these information?";
  String get vision_left_right => "LEFT/RIGHT";
  String get vision_next => "NEXT";
  String get vision_pd => "Pupillary distance(PD)";
  String get vision_sph => "Sphere(SPH)";
  String get vision_status_title => "Vision status";
  String get vision_time => "Time";
  String get warning_title => "Warning!";
  String get welcome_content => "Please complete the following steps to input your spectacles (glasses) or contact lens prescription. We will give you some personalised eye care advice after.";
  String get welcome_go => "GO";
  String get welcome_later => "DO IT LATER";
  String get welcome_title => "Welcome to MyopiAI";
}

class $zh_HK extends S {
  const $zh_HK();

  @override
  TextDirection get textDirection => TextDirection.ltr;

  @override
  String get welcome_go => "開始";
  @override
  String get welcome_title => "歡迎使用MyopiAI";
  @override
  String get settings_title => "設置";
  @override
  String get home_title => "主頁";
  @override
  String get welcome_content => "請完成以下步驟輸入您的眼睛（眼鏡）或隱形眼鏡處方。之後我們會給你一些個性化的眼保健建議。";
  @override
  String get welcome_later => "稍後設置";
  @override
  String get time_min => "分鐘";
  @override
  String get start_new_activity => "開始一個新的活動";
  @override
  String get eye_exercise => "眼保健操";
  @override
  String get time_h => "小時";
  @override
  String get eye_activity_time => "眼睛活動時間";
  @override
  String get activity_title => "活動";
  @override
  String get time_mins => "分鐘";
}

class $en extends S {
  const $en();
}

class $zh_CN extends S {
  const $zh_CN();

  @override
  TextDirection get textDirection => TextDirection.ltr;

  @override
  String get welcome_go => "开始";
  @override
  String get welcome_title => "欢迎使用MyopiAI";
  @override
  String get settings_title => "设置";
  @override
  String get home_title => "主页";
  @override
  String get welcome_content => "请完成以下步骤输入您的眼睛（眼镜）或隐形眼镜处方。 之后我们会给你一些个性化的眼保健建议。";
  @override
  String get welcome_later => "稍后设置";
  @override
  String get time_min => "分钟";
  @override
  String get start_new_activity => "开始一个新的活动";
  @override
  String get eye_exercise => "眼保健操";
  @override
  String get time_h => "小时";
  @override
  String get eye_activity_time => "眼睛活动时间";
  @override
  String get activity_title => "活动";
  @override
  String get time_mins => "分钟";
}

class GeneratedLocalizationsDelegate extends LocalizationsDelegate<S> {
  const GeneratedLocalizationsDelegate();

  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale("zh", "HK"),
      Locale("en", ""),
      Locale("zh", "CN"),
    ];
  }

  LocaleListResolutionCallback listResolution({Locale fallback, bool withCountry = true}) {
    return (List<Locale> locales, Iterable<Locale> supported) {
      if (locales == null || locales.isEmpty) {
        return fallback ?? supported.first;
      } else {
        return _resolve(locales.first, fallback, supported, withCountry);
      }
    };
  }

  LocaleResolutionCallback resolution({Locale fallback, bool withCountry = true}) {
    return (Locale locale, Iterable<Locale> supported) {
      return _resolve(locale, fallback, supported, withCountry);
    };
  }

  @override
  Future<S> load(Locale locale) {
    final String lang = getLang(locale);
    if (lang != null) {
      switch (lang) {
        case "zh_HK":
          return SynchronousFuture<S>(const $zh_HK());
        case "en":
          return SynchronousFuture<S>(const $en());
        case "zh_CN":
          return SynchronousFuture<S>(const $zh_CN());
        default:
          // NO-OP.
      }
    }
    return SynchronousFuture<S>(const S());
  }

  @override
  bool isSupported(Locale locale) => _isSupported(locale, true);

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => false;

  ///
  /// Internal method to resolve a locale from a list of locales.
  ///
  Locale _resolve(Locale locale, Locale fallback, Iterable<Locale> supported, bool withCountry) {
    if (locale == null || !_isSupported(locale, withCountry)) {
      return fallback ?? supported.first;
    }

    final Locale languageLocale = Locale(locale.languageCode, "");
    if (supported.contains(locale)) {
      return locale;
    } else if (supported.contains(languageLocale)) {
      return languageLocale;
    } else {
      final Locale fallbackLocale = fallback ?? supported.first;
      return fallbackLocale;
    }
  }

  ///
  /// Returns true if the specified locale is supported, false otherwise.
  ///
  bool _isSupported(Locale locale, bool withCountry) {
    if (locale != null) {
      for (Locale supportedLocale in supportedLocales) {
        // Language must always match both locales.
        if (supportedLocale.languageCode != locale.languageCode) {
          continue;
        }

        // If country code matches, return this locale.
        if (supportedLocale.countryCode == locale.countryCode) {
          return true;
        }

        // If no country requirement is requested, check if this locale has no country.
        if (true != withCountry && (supportedLocale.countryCode == null || supportedLocale.countryCode.isEmpty)) {
          return true;
        }
      }
    }
    return false;
  }
}

String getLang(Locale l) => l == null
  ? null
  : l.countryCode != null && l.countryCode.isEmpty
    ? l.languageCode
    : l.toString();
